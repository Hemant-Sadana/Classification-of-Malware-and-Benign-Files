#Program to extract and select features using class knowldege from malware and benign files
import os
import json
import numpy as np

#path where benign files are stored
pathname1 = 'C:/Users/hemant sadana/Desktop/Mtech/Mtech second sem/Malware Analysis/MidSem/Dynamic_Analysis_RAWDATA/Dynamic_Analysis_RAWDATA/Benign/'
files1 = os.listdir(pathname1)

#path where malware files are stored
pathname2 = 'C:/Users/hemant sadana/Desktop/Mtech/Mtech second sem/Malware Analysis/MidSem/Dynamic_Analysis_RAWDATA/Dynamic_Analysis_RAWDATA/Malware/Malw/'
files2 = os.listdir(pathname2)

#To determine the size of feature array
tot = len(files1) + len(files2)
 
#Initialise the feature array
featarray = np.zeros((tot,39))
j=0

#network related feature to be selected
network = ['tls','udp','http','icmp','smtp','tcp','hosts','dns','domains']
#summary related feature to be selected
summary = ['file_created', 'dll_loaded', 'file_opened', 'regkey_opened', 'file_written', 'file_failed', 'file_read', 'regkey_read', 'file_exists', 'guid', 'directory_created', 'mutex', 'directory_enumerated', 'regkey_written', 'command_line', 'file_deleted', 'directory_removed', 'file_recreated', 'connects_host', 'resolves_host', 'regkey_deleted', 'connects_ip', 'file_copied', 'fetches_url', 'file_moved', 'wmi_query','tls_master']

f = 0
p = 0
#feature extraction as well as selection begins
for l in range(2):
    if(l == 0):
        f = files1
        p = pathname1
    else:
        f = files2
        p = pathname2
        
    for x in f:
        with open('{}{}'.format(p, x)) as infile:
            fdata = json.load(infile)
        k = 0
        #stores duration from the info section as first feature in feature array
        if('info' in fdata.keys()):
            if('duration' in fdata['info'].keys()):
                featarray[j][k] = fdata['info']['duration']
        
        k = 1                                       #Network features to be stored from first index
        if('network' in fdata.keys()):
            for i in range(len(network)):
                if(network[i] in  fdata['network'].keys()):
                    featarray[j][k] =len(fdata['network'][network[i]])
                k=k+1
        
        k = 10                                      #Processes created to be stored from tenth index
        if('behavior' in fdata.keys()):
            if('processes' in fdata['behavior'].keys()):
                featarray[j][k] = len(fdata['behavior']['processes'])
            k = k + 1
                
            #Summary features 
            if('summary' in fdata['behavior'].keys()):      
                for i in range(len(summary)):
                    if(summary[i] in fdata['behavior']['summary'].keys()):
                        featarray[j][k] = len(fdata['behavior']['summary'][summary[i]])
                    k=k+1
        
        k = 38                                      #Number of strings
        if('strings' in fdata.keys()):
            featarray[j][k] = len(fdata['strings'])
        j = j+1
        print(j)
        infile.close()
#To save the feature array
np.save("features",featarray)